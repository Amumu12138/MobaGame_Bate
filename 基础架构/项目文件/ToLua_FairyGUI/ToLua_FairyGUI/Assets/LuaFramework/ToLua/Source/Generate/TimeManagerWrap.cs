//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class TimeManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(TimeManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddOnceEvent", AddOnceEvent);
		L.RegFunction("AddLoopEvent", AddLoopEvent);
		L.RegFunction("AddEvent", AddEvent);
		L.RegFunction("RemoveEvent", RemoveEvent);
		L.RegFunction("IsExistEventName", IsExistEventName);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mInst", get_mInst, set_mInst);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnceEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			TimeManager obj = (TimeManager)ToLua.CheckObject<TimeManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			obj.AddOnceEvent(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddLoopEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			TimeManager obj = (TimeManager)ToLua.CheckObject<TimeManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			obj.AddLoopEvent(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			TimeManager obj = (TimeManager)ToLua.CheckObject<TimeManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			double arg2 = (double)LuaDLL.luaL_checknumber(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
			obj.AddEvent(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			TimeManager obj = (TimeManager)ToLua.CheckObject<TimeManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemoveEvent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsExistEventName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			TimeManager obj = (TimeManager)ToLua.CheckObject<TimeManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.IsExistEventName(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mInst(IntPtr L)
	{
		try
		{
			ToLua.Push(L, TimeManager.mInst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mInst(IntPtr L)
	{
		try
		{
			TimeManager arg0 = (TimeManager)ToLua.CheckObject<TimeManager>(L, 2);
			TimeManager.mInst = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

