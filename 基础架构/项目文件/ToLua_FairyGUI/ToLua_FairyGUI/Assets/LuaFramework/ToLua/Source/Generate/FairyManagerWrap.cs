//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("AddPackage", AddPackage);
		L.RegFunction("AddPackageObject", AddPackageObject);
		L.RegFunction("CreateObject", CreateObject);
		L.RegFunction("AddChildObject", AddChildObject);
		L.RegFunction("RemovePackage", RemovePackage);
		L.RegFunction("RemovePackageObject", RemovePackageObject);
		L.RegFunction("RegisterFont", RegisterFont);
		L.RegFunction("SetDefaultFont", SetDefaultFont);
		L.RegFunction("SetFairyObjectRotation", SetFairyObjectRotation);
		L.RegFunction("SetFairyObjectX", SetFairyObjectX);
		L.RegFunction("SetFairyObjectY", SetFairyObjectY);
		L.RegFunction("SetFairyObjectXY", SetFairyObjectXY);
		L.RegFunction("GetFairyObjectX", GetFairyObjectX);
		L.RegFunction("GetFairyObjectY", GetFairyObjectY);
		L.RegFunction("GetFairyObjectXY", GetFairyObjectXY);
		L.RegFunction("SetFairyItemSelectedIndex", SetFairyItemSelectedIndex);
		L.RegFunction("SetFairyItemSelected", SetFairyItemSelected);
		L.RegFunction("SetFairyListNumItems", SetFairyListNumItems);
		L.RegFunction("SetFairyListClickItem", SetFairyListClickItem);
		L.RegFunction("SetFairyListRenderer", SetFairyListRenderer);
		L.RegFunction("SetFairyTransitionPlay", SetFairyTransitionPlay);
		L.RegFunction("SetFairyTransitionTimeScale", SetFairyTransitionTimeScale);
		L.RegFunction("SetFairyTransitionStop", SetFairyTransitionStop);
		L.RegFunction("SetKeyDown", SetKeyDown);
		L.RegFunction("SetFairySelected", SetFairySelected);
		L.RegFunction("SetFairyClick", SetFairyClick);
		L.RegFunction("SetFairyTouchEnd", SetFairyTouchEnd);
		L.RegFunction("SetFairyTouchBegin", SetFairyTouchBegin);
		L.RegFunction("SetFairyGlobalTouchEnd", SetFairyGlobalTouchEnd);
		L.RegFunction("SetFairyGlobalTouchBegin", SetFairyGlobalTouchBegin);
		L.RegFunction("SetFairyBtnOnTouchBegainOrOut", SetFairyBtnOnTouchBegainOrOut);
		L.RegFunction("SetFairyWidth", SetFairyWidth);
		L.RegFunction("SetFairyHeigh", SetFairyHeigh);
		L.RegFunction("GetFairyWidth", GetFairyWidth);
		L.RegFunction("GetFairyHeigh", GetFairyHeigh);
		L.RegFunction("SetFairyIcon", SetFairyIcon);
		L.RegFunction("SetFairyItemIcon", SetFairyItemIcon);
		L.RegFunction("SetFairyTitle", SetFairyTitle);
		L.RegFunction("SetFairyText", SetFairyText);
		L.RegFunction("GetFairyText", GetFairyText);
		L.RegFunction("SetFairyOnDragEnd", SetFairyOnDragEnd);
		L.RegFunction("SetFairyOnDragMove", SetFairyOnDragMove);
		L.RegFunction("SetFairyOnDragStart", SetFairyOnDragStart);
		L.RegFunction("SetFairyAlpha", SetFairyAlpha);
		L.RegFunction("SetFairyGrayed", SetFairyGrayed);
		L.RegFunction("SetFairyVisible", SetFairyVisible);
		L.RegFunction("SetFairyTouchable", SetFairyTouchable);
		L.RegFunction("SetFairySortingOrder", SetFairySortingOrder);
		L.RegFunction("SetFairyControllerSelectedIndex", SetFairyControllerSelectedIndex);
		L.RegFunction("SetFairyInputTextOnFocusIn", SetFairyInputTextOnFocusIn);
		L.RegFunction("SetFairyInputTextOnFocusOut", SetFairyInputTextOnFocusOut);
		L.RegFunction("SetFairyInputOnChange", SetFairyInputOnChange);
		L.RegFunction("SetFairyComboBoxOnChange", SetFairyComboBoxOnChange);
		L.RegFunction("SetFairyProgressValue", SetFairyProgressValue);
		L.RegFunction("SetFairySliderValue", SetFairySliderValue);
		L.RegFunction("SetFairySliderScroll", SetFairySliderScroll);
		L.RegFunction("SetFairySliderScrollEnd", SetFairySliderScrollEnd);
		L.RegFunction("SetFairySliderScrollPosX", SetFairySliderScrollPosX);
		L.RegFunction("SetFairySliderScrollPosY", SetFairySliderScrollPosY);
		L.RegFunction("SetFairySliderScrollPosXY", SetFairySliderScrollPosXY);
		L.RegFunction("SetFairySliderScrollPageX", SetFairySliderScrollPageX);
		L.RegFunction("SetFairySliderScrollPageY", SetFairySliderScrollPageY);
		L.RegFunction("SetFairySliderScrollPageXY", SetFairySliderScrollPageXY);
		L.RegFunction("GetFairySliderScrollX", GetFairySliderScrollX);
		L.RegFunction("GetFairySliderScrollY", GetFairySliderScrollY);
		L.RegFunction("GetFairySliderContentHeightOrWidth", GetFairySliderContentHeightOrWidth);
		L.RegFunction("GetFairySliderViewHeightOrWidth", GetFairySliderViewHeightOrWidth);
		L.RegFunction("SetFairySliderGripTouchEnd", SetFairySliderGripTouchEnd);
		L.RegFunction("SetFairySliderOnChange", SetFairySliderOnChange);
		L.RegFunction("SetFairyFillAmount", SetFairyFillAmount);
		L.RegFunction("SetFairyLoaderColor", SetFairyLoaderColor);
		L.RegFunction("SetFairyImageColor", SetFairyImageColor);
		L.RegFunction("SetFairyNativeObject", SetFairyNativeObject);
		L.RegFunction("SetFairyObjectScale", SetFairyObjectScale);
		L.RegFunction("GetFairyItemURL", GetFairyItemURL);
		L.RegFunction("GetFairyChildObject", GetFairyChildObject);
		L.RegFunction("GetCachedTransform", GetCachedTransform);
		L.RegFunction("SetFairyBatching", SetFairyBatching);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mInst", get_mInst, set_mInst);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPackage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 2, typeof(UnityEngine.AssetBundle));
			obj.AddPackage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPackageObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckObject(L, 2, typeof(UnityEngine.AssetBundle));
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			string o = obj.AddPackageObject(arg0, arg1, arg2);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string o = obj.CreateObject(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddChildObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string o = obj.AddChildObject(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemovePackage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemovePackage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemovePackageObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.RemovePackageObject(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterFont(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.RegisterFont(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDefaultFont(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetDefaultFont(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyObjectRotation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyObjectRotation(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyObjectX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyObjectX(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyObjectY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyObjectY(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyObjectXY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.SetFairyObjectXY(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyObjectX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float o = obj.GetFairyObjectX(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyObjectY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float o = obj.GetFairyObjectY(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyObjectXY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Vector2 o = obj.GetFairyObjectXY(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyItemSelectedIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyItemSelectedIndex(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyItemSelected(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyItemSelected(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyListNumItems(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			int arg3 = (int)LuaDLL.luaL_checknumber(L, 5);
			obj.SetFairyListNumItems(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyListClickItem(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.SetFairyListClickItem(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyListRenderer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.SetFairyListRenderer(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyTransitionPlay(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 6)
			{
				FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				obj.SetFairyTransitionPlay(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7)
			{
				FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
				LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
				LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
				float arg5 = (float)LuaDLL.luaL_checknumber(L, 7);
				obj.SetFairyTransitionPlay(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyManager.SetFairyTransitionPlay");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyTransitionTimeScale(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				obj.SetFairyTransitionTimeScale(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
				obj.SetFairyTransitionTimeScale(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyManager.SetFairyTransitionTimeScale");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyTransitionStop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetFairyTransitionStop(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetKeyDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.SetKeyDown(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySelected(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetFairySelected(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.SetFairyClick(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyTouchEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyTouchEnd(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyTouchBegin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyTouchBegin(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyGlobalTouchEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyGlobalTouchEnd(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyGlobalTouchBegin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyGlobalTouchBegin(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyBtnOnTouchBegainOrOut(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.SetFairyBtnOnTouchBegainOrOut(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyWidth(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyHeigh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyHeigh(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float o = obj.GetFairyWidth(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyHeigh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float o = obj.GetFairyHeigh(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyIcon(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetFairyIcon(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyItemIcon(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.SetFairyItemIcon(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyTitle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetFairyTitle(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetFairyText(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.GetFairyText(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyOnDragEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyOnDragEnd(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyOnDragMove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyOnDragMove(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyOnDragStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyOnDragStart(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyAlpha(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairyAlpha(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyGrayed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetFairyGrayed(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetFairyVisible(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyTouchable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetFairyTouchable(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySortingOrder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairySortingOrder(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyControllerSelectedIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.SetFairyControllerSelectedIndex(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyInputTextOnFocusIn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyInputTextOnFocusIn(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyInputTextOnFocusOut(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyInputTextOnFocusOut(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyInputOnChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyInputOnChange(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyComboBoxOnChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairyComboBoxOnChange(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyProgressValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.SetFairyProgressValue(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderValue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.SetFairySliderValue(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScroll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairySliderScroll(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScrollEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairySliderScrollEnd(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScrollPosX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.SetFairySliderScrollPosX(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScrollPosY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.SetFairySliderScrollPosY(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScrollPosXY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.SetFairySliderScrollPosXY(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScrollPageX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairySliderScrollPageX(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScrollPageY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetFairySliderScrollPageY(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderScrollPageXY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.SetFairySliderScrollPageXY(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairySliderScrollX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float o = obj.GetFairySliderScrollX(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairySliderScrollY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float o = obj.GetFairySliderScrollY(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairySliderContentHeightOrWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			float o = obj.GetFairySliderContentHeightOrWidth(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairySliderViewHeightOrWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			float o = obj.GetFairySliderViewHeightOrWidth(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderGripTouchEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairySliderGripTouchEnd(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairySliderOnChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.SetFairySliderOnChange(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyFillAmount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.SetFairyFillAmount(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyLoaderColor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			byte arg1 = (byte)LuaDLL.luaL_checknumber(L, 3);
			byte arg2 = (byte)LuaDLL.luaL_checknumber(L, 4);
			byte arg3 = (byte)LuaDLL.luaL_checknumber(L, 5);
			byte arg4 = (byte)LuaDLL.luaL_checknumber(L, 6);
			obj.SetFairyLoaderColor(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyImageColor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			obj.SetFairyImageColor(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyNativeObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 3, typeof(UnityEngine.GameObject));
			obj.SetFairyNativeObject(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyObjectScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.SetFairyObjectScale(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyItemURL(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string o = obj.GetFairyItemURL(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFairyChildObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string o = obj.GetFairyChildObject(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCachedTransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.GetCachedTransform(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFairyBatching(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyManager obj = (FairyManager)ToLua.CheckObject<FairyManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetFairyBatching(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mInst(IntPtr L)
	{
		try
		{
			ToLua.Push(L, FairyManager.mInst);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mInst(IntPtr L)
	{
		try
		{
			FairyManager arg0 = (FairyManager)ToLua.CheckObject<FairyManager>(L, 2);
			FairyManager.mInst = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

