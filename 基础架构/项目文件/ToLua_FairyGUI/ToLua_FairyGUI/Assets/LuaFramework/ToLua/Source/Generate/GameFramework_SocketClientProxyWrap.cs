//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameFramework_SocketClientProxyWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameFramework.SocketClientProxy), typeof(GameFramework.SocketClient));
		L.RegFunction("AddListener", AddListener);
		L.RegFunction("RemoveListener", RemoveListener);
		L.RegFunction("SendData", SendData);
		L.RegFunction("Loop", Loop);
		L.RegFunction("Clear", Clear);
		L.RegFunction("New", _CreateGameFramework_SocketClientProxy);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("onNetMsgBack", get_onNetMsgBack, set_onNetMsgBack);
		L.RegVar("onNetDataError", get_onNetDataError, set_onNetDataError);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameFramework_SocketClientProxy(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameFramework.SocketClientProxy obj = new GameFramework.SocketClientProxy();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				GameFramework.SocketClientProxy obj = new GameFramework.SocketClientProxy(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameFramework.SocketClientProxy.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)ToLua.CheckObject<GameFramework.SocketClientProxy>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddListener(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)ToLua.CheckObject<GameFramework.SocketClientProxy>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.RemoveListener(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)ToLua.CheckObject<GameFramework.SocketClientProxy>(L, 1);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			object arg2 = ToLua.ToVarObject(L, 4);
			obj.SendData(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Loop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)ToLua.CheckObject<GameFramework.SocketClientProxy>(L, 1);
			obj.Loop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)ToLua.CheckObject<GameFramework.SocketClientProxy>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onNetMsgBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)o;
			System.Action ret = obj.onNetMsgBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onNetMsgBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onNetDataError(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)o;
			System.Action<GameFramework.SessionData> ret = obj.onNetDataError;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onNetDataError on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onNetMsgBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)o;
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.onNetMsgBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onNetMsgBack on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onNetDataError(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameFramework.SocketClientProxy obj = (GameFramework.SocketClientProxy)o;
			System.Action<GameFramework.SessionData> arg0 = (System.Action<GameFramework.SessionData>)ToLua.CheckDelegate<System.Action<GameFramework.SessionData>>(L, 2);
			obj.onNetDataError = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onNetDataError on a nil value");
		}
	}
}

